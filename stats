-*-org-*-

dell optiplex:
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 15
model           : 2
model name      : Intel(R) Pentium(R) 4 CPU 2.40GHz
stepping        : 7
cpu MHz         : 2391.191
cache size      : 512 KB
fdiv_bug        : no
hlt_bug         : no
f00f_bug        : no
coma_bug        : no
fpu             : yes
fpu_exception   : yes
cpuid level     : 2
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe cid
bogomips        : 4771.02
-----
Lenovo T60 laptop:
two processors (although all of these anagram programs are single-threaded)
cpu MHz: either 1,000 or 2,000; it's not clear
model name: T2400

time ./anagrams  > /dev/null

All times are on the dell optiplex, unless otherwise noted.

For testing a new implementation, note that the words file should wind
up with 72794 words (66965 distinct bags); these two numbers are baked
in to the unit tests in a couple of the implementations, but really
should be in all of them.  That words file seems to exist in different
versions on different *nix distros, so I've checked in my own copy.  I
suspect that many of the implementations here that got the wrong
answer did so not because they're buggy, but only because I
unknowingly tested them against a different version of the dictionary
than the Common Lisp version.

Also note that the times are meaningless if the answer isn't correct.
For example, if the answer contains too few items, then the time will
be notably lower than if the answer were correct.

"Correct answer" basically means "did it get the same results as the Common Lisp version?"


| language                     | optimized? | machine  | correct                  | time                 | time "st              | time "est        | time "Ernes       | time "Ernest        | bag            | dictionary     |
|                              |            |          | answer?                  | "hemingway"          | hemingway"            | hemingway"       | Hemingway"        | Hemingway"          | implementation | cached?        |
|                              |            |          |                          |                      |                       |                  |                   | (894521 anagrams)   |                |                |
|------------------------------+------------+----------+--------------------------+----------------------+-----------------------+------------------+-------------------+---------------------+----------------+----------------|
| ----------------common lisps |            | optiplex | yes                      |                      |                       |                  |                   |                     | bignums        | yes            |
| sbcl                         |            | optiplex |                          |                      |                       |                  |                   | 7 user seconds      |                |                |
| cmucl                        |            | optiplex |                          | 1 seconds            | 2 seconds             |                  |                   | 10 user seconds     |                |                |
| clisp                        |            | optiplex |                          |                      |                       |                  |                   | 20 user seconds     |                |                |
| --------------------schemes  |            |          |                          |                      |                       |                  |                   |                     |                |                |
| mzscheme v4.1                | no         | lenovo   | yes                      |                      |                       |                  |                   | 16 user seconds     |                |                |
| mzscheme v3.99.0.12          | no         | lenovo   | yes                      |                      |                       |                  |                   | 22 user seconds     |                |                |
| mzscheme v370                |            | lenovo   | yes                      |                      |                       |                  |                   | 22 user seconds     | bignums        | no             |
| mit-scheme 7.7.90 + 20070623 | yes        | optiplex | close                    |                      |                       |                  |                   | 22 user seconds (!) | bignums        | no             |
| mit-scheme 7.7.90 + 20070623 | I think so | lenovo   | close                    |                      |                       |                  |                   | 29 user seconds     | bignums        | no             |
| mzscheme v370                |            | optiplex | yes                      |                      |                       |                  |                   | 30 user seconds     | bignums        | no             |
| Ikarus 0.0.3+                | no         | optiplex | close                    |                      |                       |                  |                   | 30 user seconds     | bignums        | no             |
| mzscheme v301.4              |            | optiplex | yes                      |                      |                       |                  | 10 user seconds   | 40 user seconds     | bignums        | no             |
| chicken (3.4.0)              | yes: -O3   | lenovo   | no                       |                      |                       |                  |                   | 45 user seconds     | strings        | yes            |
| Ikarus 0.0.1                 | no         | optiplex | close                    | 2.4 user seconds     | 2.8 user seconds      | 3.7 user seconds | 10.4 user seconds | 46 user seconds     | bignums        | no             |
| bigloo 3.0a                  |            | optiplex |                          |                      |                       |                  | 11 user seconds   | 57 user seconds     | strings        | yes            |
| chicken 4.0.0                | dunno      | lenovo   | yes                      |                      |                       |                  |                   | 70 user seconds     | strings        | yes            |
| chicken (315)                | yes: -O3   | optiplex | no                       | 3 user seconds       | 3 user seconds        | 5 user seconds   | 21 user seconds   | 79 user seconds     | strings        | yes            |
| gambit 4.0b22                | yes        | lenovo   | not quite                | 1 user seconds       | 1 user seconds        | 1 user seconds   |                   | 84 user seconds     | bignums        | no             |
| clojure 1.1.0                | no         | lenovo   | yes                      |                      |                       |                  | 16 user seconds   | 140 user seconds    | bignums        | no             |
| gambit 4b17                  | no! fixme  | optiplex | not quite                | 5 user seconds       | 6 user seconds        | 9 user seconds   | 41 user seconds   | 200 user seconds    | bignums        | no             |
| scheme48 1.3                 |            | optiplex | no                       |                      |                       | 16 user seconds  | 55 user seconds   | 272 user seconds    | bignums        | no(!)          |
| arc0 / mzscheme 352          | noe        | optiplex | yes                      |                      |                       |                  |                   | 1800 seconds        | bignums        | yes            |
| arc0 / mzscheme 371          | noe        | optiplex | yes                      |                      |                       |                  |                   | 1400 user seconds   | bignums        | yes            |
| arc0 / mzscheme 371          | noe        | lenovo   | yes                      |                      |                       |                  |                   | 1200 user seconds   | bignums        | yes            |
| guile 1.7 (gmp)              |            | optiplex | no; way too many         |                      |                       | 40 user seconds  |                   | 2400 user seconds   | bignums        | yes            |
| gauche 0.8.6                 |            | optiplex | no                       | 3 user seconds       | 6 user seconds        | 18 user seconds  | 194 user seconds  |                     | bignums        | no             |
| scsh                         |            | optiplex | no                       | 39 user seconds      | 64 seconds            | 88 seconds       |                   |                     | bignums        | yes (code too) |
| ------------------------misc |            |          |                          |                      |                       |                  |                   |                     |                |                |
| haskell (ghc 6.8.2) -O       |            | optiplex | yes                      |                      |                       |                  |                   | 20 user seconds     | bignums        | no             |
| c++ (-O2)                    |            | optiplex | yes                      |                      |                       |                  |                   | 90 user seconds     | bignums        | no             |
| java 1.6.0                   | dunno      | T60      | no (about twice as many) |                      |                       |                  |                   | 132 wallclock       | bignums        | no             |
| python                       |            | optiplex |                          | 4 seconds            | 6 seconds             | 15 user seconds  |                   | 200 user seconds    | bignums        | no             |
| Cython version 0.9.6.14      |            |          |                          |                      |                       |                  |                   |                     |                |                |
| jython 2.5b1                 | nah        | T60      | prolly                   | 10 user              |                       |                  |                   |                     | bignums        | no             |
| python with psyco            |            | optiplex |                          |                      |                       |                  |                   | 75 user seconds     | bignums        | no             |
| perl5                        |            | optiplex | not quite                |                      |                       | 18 user seconds  |                   | 300 user seconds    | strings        | yes            |
| perl5 numeric                |            | optiplex |                          |                      |                       |                  |                   | > 27 minutes        | bignums        | yes            |
| ruby                         |            | optiplex |                          | 8 seconds            | 14 user seconds       | 37 user seconds  |                   | 960 user seconds    | bignums        | yes            |
| parrot                       |            | optiplex | no                       |                      |                       | 100 seconds      |                   |                     | bignums        | yes            |
| c-sharp                      |            | lenovo   |                          | 10 wallclock seconds | 144 wallclock seconds |                  |                   |                     | strings        | sort of        |
| emacs lisp                   | hell no    | optiplex |                          | 20 wallclock seconds |                       |                  |                   |                     | strings        | no             |
| erlang R11B5                 | no         | lenovo   | nah                      | 2 + user             | 17 user               | 57 user          | 300 user          |                     | bignums        | yes            |


---
Note: when gathering data to fill in the above, be sure that none of
the programs or libraries were compiled for profiling -- because they
run much slower than normal libraries.

The really interesting question isn't so much "how fast is this
language", but rather "does this language have an easy-to-use
profiler".  So far, the answer in most cases has been "no" :-|

* C++ has gperf, which takes a bit of doing, but provides useful numbers;

* some of the Common Lisps have something similar

* most of the Schemes, python, and ruby have nothing, so far as I can
  tell

* mzscheme has a decent one, which you activate by requiring
  errortrace.ss, then turning on a bunch of profiling parameters

* Haskell's profiler was quite easy to use

For comparison, note that the program "an"
(http://ftp.debian.org/pool/main/a/an/) appears to be about three
times faster than my SBCL version:

time an -m 2 -l 4  "Intelligent Design" | LANG= wc
=>
 291684 1158130 6532034

real	0m1.536s
user	0m1.464s
sys	0m0.032s

whereas

(time (length (remove-if-not #'(lambda (seq) (= 4 (length seq))) (anagrams::anagrams "Intelligent Design"))))
=>
Evaluation took:
  4.483 seconds of real time
  4.232265 seconds of user run time
  0.212013 seconds of system run time
  0 page faults and
  228,563,456 bytes consed.
105533

So: 1.5 seconds versus my 4.2 seconds, and it found 300,000 results
whereas I found only 100,000.  Hmph.
